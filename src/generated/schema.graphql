# This file has been automatically generated.
# Please do not edit!

scalar Date
type Query
type Mutation
extend type Query {
  me: User
}

extend type Mutation {
  inviteByEmail(email: String!, isSuperUser: Boolean): Boolean!
  resendVerificationEmail: Boolean!
  resetPasswordBegin(email: String!, password: String!): Boolean!
  resetPasswordFinish(secret: String!): Boolean!
  signin(email: String!, password: String!): User
  signout: Boolean!
  signup(email: String!, password: String!, name: String!): Boolean!
  signupWithInvitation(
    password: String!
    name: String!
    secret: String!
  ): Boolean!
  verifyEmail(emailVerificationSecret: String!): VerifyEmailResponse!
}

type VerifyEmailResponse {
  email: String
  name: String
}
extend type Query {
  project(id: Int!): Project
  projects: [Project]!
}

extend type Mutation {
  projectCreate(name: String!): Project
  projectUpdate(
    id: Int!
    name: String
    newMemberIds: [Int]
    removedMemberIds: [Int]
  ): Project
}

type Project {
  id: Int!
  name: String!
  owner: User!
  members: [User]!
  createdAt: Date!
  updatedAt: Date!
}
extend type Query {
  user(id: Int!): User
  users: [User]!
}

extend type Mutation {
  updateUser(
    id: Int!
    email: String
    name: String
    isSuperUser: Boolean
    isApproved: Boolean
  ): User
}

type User {
  id: Int!
  name: String!
  email: String!
  isApproved: Boolean!
  isSuperUser: Boolean!
  emailVerifiedAt: Date
  createdAt: Date!
  updatedAt: Date!
}
