fragment UserFields on User {
  id
  name
  email
  isApproved
  isSuperUser
  emailVerifiedAt
  createdAt
  updatedAt
}

query Me {
  me {
    ...UserFields
  }
}

query Projects {
  projects {
    id
    name
    owner {
      ...UserFields
    }
    # members {
    #   id
    #   name
    # }
    createdAt
    updatedAt
  }
}

query Project($id: Int!) {
  project(id: $id) {
    id
    name
    owner {
      ...UserFields
    }
    createdAt
    updatedAt
  }
}

query User($id: Int!) {
  user(id: $id) {
    ...UserFields
  }
}

query Users {
  users {
    ...UserFields
  }
}

mutation ProjectCreate($name: String!) {
  projectCreate(name: $name) {
    id
    name
    createdAt
    updatedAt
  }
}

mutation InviteByEmail($email: String!, $isSuperUser: Boolean) {
  inviteByEmail(email: $email, isSuperUser: $isSuperUser)
}

mutation ResendVerificationEmail {
  resendVerificationEmail
}

mutation ResetPasswordBegin($email: String!, $password: String!) {
  resetPasswordBegin(email: $email, password: $password)
}

mutation ResetPasswordFinish($secret: String!) {
  resetPasswordFinish(secret: $secret)
}

mutation Signup($email: String!, $name: String!, $password: String!) {
  signup(email: $email, name: $name, password: $password)
}

mutation SignupWithInvitation(
  $name: String!
  $password: String!
  $secret: String!
) {
  signupWithInvitation(name: $name, password: $password, secret: $secret)
}

mutation Signin($email: String!, $password: String!) {
  signin(email: $email, password: $password) {
    ...UserFields
  }
}

mutation Signout {
  signout
}

mutation UpdateUser(
  $id: Int!
  $email: String
  $name: String
  $isSuperUser: Boolean
  $isApproved: Boolean
) {
  updateUser(
    id: $id
    email: $email
    name: $name
    isSuperUser: $isSuperUser
    isApproved: $isApproved
  ) {
    ...UserFields
  }
}

mutation VerifyEmail($emailVerificationSecret: String!) {
  verifyEmail(emailVerificationSecret: $emailVerificationSecret) {
    email
    name
  }
}
